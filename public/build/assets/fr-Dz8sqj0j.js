import{t as d,c as W,n as w,e as C,g as P,m as j,a as b,b as J,d as y,f as M,h as S,i as v}from"./en-US-DckgOUrT.js";function D(a,t){const e=+d(a)-+d(t);return e<0?-1:e>0?1:e}function x(a){return W(a,Date.now())}function X(a,t,e){const[r,n]=w(e==null?void 0:e.in,a,t),o=r.getFullYear()-n.getFullYear(),u=r.getMonth()-n.getMonth();return o*12+u}function k(a){return t=>{const r=(a?Math[a]:Math.trunc)(t);return r===0?0:r}}function O(a,t){return+d(a)-+d(t)}function F(a,t){const e=d(a,t==null?void 0:t.in);return e.setHours(23,59,59,999),e}function H(a,t){const e=d(a,t==null?void 0:t.in),r=e.getMonth();return e.setFullYear(e.getFullYear(),r+1,0),e.setHours(23,59,59,999),e}function N(a,t){const e=d(a,t==null?void 0:t.in);return+F(e,t)==+H(e,t)}function _(a,t,e){const[r,n,o]=w(e==null?void 0:e.in,a,a,t),u=D(n,o),i=Math.abs(X(n,o));if(i<1)return 0;n.getMonth()===1&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-u*i);let c=D(n,o)===-u;N(r)&&i===1&&D(r,o)===1&&(c=!1);const l=u*(i-+c);return l===0?0:l}function L(a,t,e){const r=O(a,t)/1e3;return k(e==null?void 0:e.roundingMethod)(r)}function Y(a,t,e){const r=J(),n=(e==null?void 0:e.locale)??r.locale??C,o=2520,u=D(a,t);if(isNaN(u))throw new RangeError("Invalid time value");const i=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:u}),[c,l]=w(e==null?void 0:e.in,...u>0?[t,a]:[a,t]),f=L(l,c),T=(P(l)-P(c))/1e3,s=Math.round((f-T)/60);let h;if(s<2)return e!=null&&e.includeSeconds?f<5?n.formatDistance("lessThanXSeconds",5,i):f<10?n.formatDistance("lessThanXSeconds",10,i):f<20?n.formatDistance("lessThanXSeconds",20,i):f<40?n.formatDistance("halfAMinute",0,i):f<60?n.formatDistance("lessThanXMinutes",1,i):n.formatDistance("xMinutes",1,i):s===0?n.formatDistance("lessThanXMinutes",1,i):n.formatDistance("xMinutes",s,i);if(s<45)return n.formatDistance("xMinutes",s,i);if(s<90)return n.formatDistance("aboutXHours",1,i);if(s<j){const m=Math.round(s/60);return n.formatDistance("aboutXHours",m,i)}else{if(s<o)return n.formatDistance("xDays",1,i);if(s<b){const m=Math.round(s/j);return n.formatDistance("xDays",m,i)}else if(s<b*2)return h=Math.round(s/b),n.formatDistance("aboutXMonths",h,i)}if(h=_(l,c),h<12){const m=Math.round(s/b);return n.formatDistance("xMonths",m,i)}else{const m=h%12,g=Math.trunc(h/12);return m<3?n.formatDistance("aboutXYears",g,i):m<9?n.formatDistance("overXYears",g,i):n.formatDistance("almostXYears",g+1,i)}}function Me(a,t){return Y(a,x(a),t)}const z={lessThanXSeconds:{one:"moins d’une seconde",other:"moins de {{count}} secondes"},xSeconds:{one:"1 seconde",other:"{{count}} secondes"},halfAMinute:"30 secondes",lessThanXMinutes:{one:"moins d’une minute",other:"moins de {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"environ 1 heure",other:"environ {{count}} heures"},xHours:{one:"1 heure",other:"{{count}} heures"},xDays:{one:"1 jour",other:"{{count}} jours"},aboutXWeeks:{one:"environ 1 semaine",other:"environ {{count}} semaines"},xWeeks:{one:"1 semaine",other:"{{count}} semaines"},aboutXMonths:{one:"environ 1 mois",other:"environ {{count}} mois"},xMonths:{one:"1 mois",other:"{{count}} mois"},aboutXYears:{one:"environ 1 an",other:"environ {{count}} ans"},xYears:{one:"1 an",other:"{{count}} ans"},overXYears:{one:"plus d’un an",other:"plus de {{count}} ans"},almostXYears:{one:"presqu’un an",other:"presque {{count}} ans"}},I=(a,t,e)=>{let r;const n=z[a];return typeof n=="string"?r=n:t===1?r=n.one:r=n.other.replace("{{count}}",String(t)),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?"dans "+r:"il y a "+r:r},A={full:"EEEE d MMMM y",long:"d MMMM y",medium:"d MMM y",short:"dd/MM/y"},E={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},V={full:"{{date}} 'à' {{time}}",long:"{{date}} 'à' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},p={date:y({formats:A,defaultWidth:"full"}),time:y({formats:E,defaultWidth:"full"}),dateTime:y({formats:V,defaultWidth:"full"})},q={lastWeek:"eeee 'dernier à' p",yesterday:"'hier à' p",today:"'aujourd’hui à' p",tomorrow:"'demain à' p'",nextWeek:"eeee 'prochain à' p",other:"P"},R=(a,t,e,r)=>q[a],Q={narrow:["av. J.-C","ap. J.-C"],abbreviated:["av. J.-C","ap. J.-C"],wide:["avant Jésus-Christ","après Jésus-Christ"]},U={narrow:["T1","T2","T3","T4"],abbreviated:["1er trim.","2ème trim.","3ème trim.","4ème trim."],wide:["1er trimestre","2ème trimestre","3ème trimestre","4ème trimestre"]},G={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["janv.","févr.","mars","avr.","mai","juin","juil.","août","sept.","oct.","nov.","déc."],wide:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"]},K={narrow:["D","L","M","M","J","V","S"],short:["di","lu","ma","me","je","ve","sa"],abbreviated:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],wide:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"]},$={narrow:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"mat.",afternoon:"ap.m.",evening:"soir",night:"mat."},abbreviated:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"matin",afternoon:"après-midi",evening:"soir",night:"matin"},wide:{am:"AM",pm:"PM",midnight:"minuit",noon:"midi",morning:"du matin",afternoon:"de l’après-midi",evening:"du soir",night:"du matin"}},B=(a,t)=>{const e=Number(a),r=t==null?void 0:t.unit;if(e===0)return"0";const n=["year","week","hour","minute","second"];let o;return e===1?o=r&&n.includes(r)?"ère":"er":o="ème",e+o},Z=["MMM","MMMM"],ee={preprocessor:(a,t)=>a.getDate()===1||!t.some(r=>r.isToken&&Z.includes(r.value))?t:t.map(r=>r.isToken&&r.value==="do"?{isToken:!0,value:"d"}:r),ordinalNumber:B,era:M({values:Q,defaultWidth:"wide"}),quarter:M({values:U,defaultWidth:"wide",argumentCallback:a=>a-1}),month:M({values:G,defaultWidth:"wide"}),day:M({values:K,defaultWidth:"wide"}),dayPeriod:M({values:$,defaultWidth:"wide"})},te=/^(\d+)(ième|ère|ème|er|e)?/i,ae=/\d+/i,ne={narrow:/^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,abbreviated:/^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,wide:/^(avant Jésus-Christ|après Jésus-Christ)/i},re={any:[/^av/i,/^ap/i]},ie={narrow:/^T?[1234]/i,abbreviated:/^[1234](er|ème|e)? trim\.?/i,wide:/^[1234](er|ème|e)? trimestre/i},se={any:[/1/i,/2/i,/3/i,/4/i]},oe={narrow:/^[jfmasond]/i,abbreviated:/^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i,wide:/^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i},ue={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^av/i,/^ma/i,/^juin/i,/^juil/i,/^ao/i,/^s/i,/^o/i,/^n/i,/^d/i]},me={narrow:/^[lmjvsd]/i,short:/^(di|lu|ma|me|je|ve|sa)/i,abbreviated:/^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,wide:/^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i},de={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^di/i,/^lu/i,/^ma/i,/^me/i,/^je/i,/^ve/i,/^sa/i]},ce={narrow:/^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,any:/^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i},le={any:{am:/^a/i,pm:/^p/i,midnight:/^min/i,noon:/^mid/i,morning:/mat/i,afternoon:/ap/i,evening:/soir/i,night:/nuit/i}},fe={ordinalNumber:S({matchPattern:te,parsePattern:ae,valueCallback:a=>parseInt(a)}),era:v({matchPatterns:ne,defaultMatchWidth:"wide",parsePatterns:re,defaultParseWidth:"any"}),quarter:v({matchPatterns:ie,defaultMatchWidth:"wide",parsePatterns:se,defaultParseWidth:"any",valueCallback:a=>a+1}),month:v({matchPatterns:oe,defaultMatchWidth:"wide",parsePatterns:ue,defaultParseWidth:"any"}),day:v({matchPatterns:me,defaultMatchWidth:"wide",parsePatterns:de,defaultParseWidth:"any"}),dayPeriod:v({matchPatterns:ce,defaultMatchWidth:"any",parsePatterns:le,defaultParseWidth:"any"})},ve={code:"fr",formatDistance:I,formatLong:p,formatRelative:R,localize:ee,match:fe,options:{weekStartsOn:1,firstWeekContainsDate:4}};export{ve as a,Me as f};
